syntax = "proto3";

package com.bht.saigonparking.api.grpc.user;
//option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "SaigonParkingUser";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

enum UserRole {
    CUSTOMER = 0;
    PARKING_LOT_EMPLOYEE = 1;
    GOVERNMENT_EMPLOYEE = 2;
    ADMIN = 3;
}

message User {
    int64 id = 1;
    UserRole role = 2;
    string username = 3;
    string password = 4;
    string email = 5;
    bool isActivated = 6;
    string lastSignIn = 7;
    int64 version = 8;
}

message Customer {
    User userInfo = 1;
    string firstName = 2;
    string lastName = 3;
    string phone = 4;
    string lastUpdated = 5;
}

message ParkingLotEmployee {
    User userInfo = 1;
    int64 parkingLotId = 2;
}

message UpdatePasswordRequest {
    string username = 1;
    string newPassword = 2;
}

service UserService {
    rpc getUserById (google.protobuf.Int64Value) returns (User);
    rpc getUserByUsername (google.protobuf.StringValue) returns (User);
    rpc getCustomerById (google.protobuf.Int64Value) returns (Customer);
    rpc getParkingLotEmployeeById (google.protobuf.Int64Value) returns (ParkingLotEmployee);
    rpc updateUserLastSignIn (google.protobuf.Int64Value) returns (google.protobuf.Empty);

    /**
     * Update password: 2 cases
     * 1/ forgot password
     * 2/ change password
     * return Empty value, if succeed,
     * otherwise, throw exception */
    rpc updatePassword (UpdatePasswordRequest) returns (google.protobuf.Empty);

    /* generate new token as soon as user click on the link provided by email:
     * activate new account by email or reset password by email
     * request send to server need to provide 5-min access token via metadata, so that server can know
     * who is request for new token or whether the token provided is expired or not */
    rpc generateNewToken (google.protobuf.Empty) returns (google.protobuf.StringValue);
}