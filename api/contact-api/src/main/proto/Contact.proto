syntax = "proto3";

package com.bht.saigonparking.api.grpc.contact;
option java_multiple_files = true;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

/* message will be initialized as an object (protobuf Java obj/ protobuf Javascript obj) then stringify into JSON format */
/* for Java (mobile client), please use GSON lib from Google to parse JSON into Java obj and generate JSON from Java obj */
/* for Javascript (web client), please init each obj as Protobuf obj, then use toObject() method to convert to JSON obj  */
message SaigonParkingMessage {

    enum SaigonParkingMessageClassification {
        CUSTOMER_MESSAGE = 0;
        PARKING_LOT_MESSAGE = 1;
    }

    enum SaigonParkingMessageType {
        TEXT_MESSAGE = 0; /* send from both Customer and ParkingLot: just text message */
        BOOKING_REQUEST = 1; /* send from Customer: request for new booking */
        BOOKING_CANCELLATION = 2; /* send from Customer: cancel booking request */
        BOOKING_ACCEPTANCE = 3; /* send from ParkingLot: accept booking request */
        BOOKING_REJECT = 4; /* send from ParkingLot: reject booking request */
        AVAILABILITY_UPDATE = 5; /* send from ParkingLot: update available slot */
    }

    SaigonParkingMessageClassification classification = 1; /* whether message is sent from customer or parking-lot */
    SaigonParkingMessageType type = 2; /* default TEXT_MESSAGE (chatting) */
    string content = 3; /* can be empty or stringify as JSON, please take a look at each Content definition below */
    int64 senderId = 4; /* sender's user ID */
    int64 receiverId = 5; /* receiver ID: will be UserId if it sent from ParkingLot, otherwise ParkingLotId ! */
    string timestamp = 6; /* the time at which the sender sent this message, timestamp-format yyyy-MM-dd hh:mm:ss */
}

/* content will be stringify as JSON, then it will be assigned into content field in SaigonParkingMessage */
message TextMessageContent {
    string message = 1;
}

/* content will be stringify as JSON, then it will be assigned into content field in SaigonParkingMessage */
message BookingRequestContent {
    string customerName = 1;
    string customerLicense = 2;
    double amountOfParkingHour = 3;
}

/* content will be stringify as JSON, then it will be assigned into content field in SaigonParkingMessage */
message BookingCancellationContent {
    string bookingId = 1;
    string reason = 2;
}

/* content will be stringify as JSON, then it will be assigned into content field in SaigonParkingMessage */
message BookingAcceptanceContent {
    string bookingId = 1;
}

/* content will be stringify as JSON, then it will be assigned into content field in SaigonParkingMessage */
message BookingRejectContent {
    string reason = 1;
}

/* content will be stringify as JSON, then it will be assigned into content field in SaigonParkingMessage */
message AvailabilityUpdateContent {
    int64 parkingLotId = 1;
    int32 newAvailability = 2;
}